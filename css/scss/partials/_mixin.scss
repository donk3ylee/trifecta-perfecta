
// Creates a circle in the center of the relatively positioned parent element. Use the content to transition the element where you wish from there
@mixin build-circle($dia: 100px, $backC: null, $borderW: null, $borderC: null){
    position: absolute;
    left: calc(50% - (#{$dia} / 2));
    top: calc(50% - (#{$dia} / 2));
    width: $dia;
    height: $dia;
    border-radius: 50%;
    border: solid #{$borderW} #{$borderC};
    background-color: $backC;
    
    @content;
}


@mixin place-awesome-icon($glyph, $size: null, $orientation: 'before'){
    $awesome_icon_map:(
        'toast':'\f7ec',
        'cookie':'\f564',
        'cake':'\1f382',
        'facebook':'\f39e',
        'twitter':'\f099',
        'instagram':'\f16d',
        'youtube':'\f167',
        );
        @if map-has-key($awesome_icon_map,$glyph){
        font-size: $size;
        line-height: normal;
        overflow: visible;
        &::#{$orientation}{
            display: flex;
            justify-content: center;
            font-family: FontAwesome!important;
            content: map-get($awesome_icon_map,$glyph);
            @content;
        }
    }@else{
        @error "Your trying to call the font name '#{$name}' which does not exist in the awesome_icon_map used in the @mixin place-awesome-icon().";
    }
}


@mixin MQ($bp, $func){
    $MQ_func_map:(
    'and-wider':'min-width',
    'and-smaller':'max-width',
    );
    $MQ_breakpoints_map:(
        '0':'0px',
        '1':'767px',
        '2':'992px',
        '3':'1260px',
        '4':'1400px',
    );
    @if not map-has-key($MQ_breakpoints_map,$bp){
        @error "Your trying to call a 'break point' that does not exist in the MQ_breakpoints_map map used in the @mixin MQ().";
    }@else if not map-has-key($MQ_func_map, $func){
        @error "Your trying to use a $func that does not exist in the $MQ_func_map map used in the @mixin MQ().";
    }@else{
        @media(map-get($MQ_func_map,$func): map-get($MQ_breakpoints_map,$bp)){
            @content;
        }
    }   
}

@mixin targetIEonly{
    @media screen\0 {  // targets IE 8 9 & 10
    @content;
    }
    
    _:-ms-fullscreen, :root {  // Targets IE 11+
    @content;
    }
}